<template>
  <view class="page">
    <!-- 页面头部 -->
    <view class="page-header">
      <view class="header-back" @tap="goBack">
        <text class="back-icon">‹</text>
      </view>
      <text class="header-title">账号注销</text>
      <view class="header-placeholder"></view>
    </view>

    <!-- 加载状态 -->
    <view v-if="isLoading" class="loading-container">
      <u-loading-page></u-loading-page>
    </view>

    <!-- 主要内容 -->
    <view v-else class="content">
      <!-- 警告信息 -->
      <view class="warning-section">
        <view class="warning-icon">⚠️</view>
        <text class="warning-title">注销账号将永久删除所有数据</text>
        <text class="warning-desc">
          账号注销后，您的所有数据将在7个工作日内被永久删除，包括：
        </text>
        <view class="data-list">
          <view class="data-item">
            <text class="item-icon">•</text>
            <text class="item-text">个人信息和资料</text>
          </view>
          <view class="data-item">
            <text class="item-icon">•</text>
            <text class="item-text">评估记录和结果</text>
          </view>
          <view class="data-item">
            <text class="item-icon">•</text>
            <text class="item-text">AI对话历史</text>
          </view>
          <view class="data-item">
            <text class="item-icon">•</text>
            <text class="item-text">社区发布的内容</text>
          </view>
          <view class="data-item">
            <text class="item-icon">•</text>
            <text class="item-text">收藏和偏好设置</text>
          </view>
        </view>
      </view>

      <!-- 注销原因 -->
      <view class="reason-section">
        <text class="section-title">注销原因（可选）</text>
        <view class="reason-options">
          <view 
            v-for="reason in reasonOptions" 
            :key="reason.value"
            class="reason-item"
            :class="{ active: selectedReason === reason.value }"
            @tap="selectedReason = reason.value"
          >
            <text class="reason-text">{{ reason.label }}</text>
          </view>
        </view>
        
        <view v-if="selectedReason === 'other'" class="custom-reason">
          <textarea 
            v-model="customReason"
            class="reason-input"
            placeholder="请输入其他原因..."
            maxlength="200"
          ></textarea>
          <text class="char-count">{{ customReason.length }}/200</text>
        </view>
      </view>

      <!-- 确认复选框 -->
      <view class="confirm-section">
        <label class="confirm-item">
          <checkbox 
            :checked="confirmDelete"
            @tap="confirmDelete = !confirmDelete"
            color="#FF3B30"
          />
          <text class="confirm-text">我已了解并同意永久删除我的账号和所有数据</text>
        </label>
      </view>

      <!-- 操作按钮 -->
      <view class="action-section">
        <button 
          class="btn btn-cancel"
          @tap="goBack"
        >
          取消
        </button>
        <button 
          class="btn btn-delete"
          :class="{ disabled: !canDelete }"
          :disabled="!canDelete"
          @tap="handleDelete"
        >
          {{ isDeleting ? '处理中...' : '确认注销' }}
        </button>
      </view>

      <!-- 冷静期提示 -->
      <view class="cooldown-tip">
        <text class="tip-icon">ℹ️</text>
        <text class="tip-text">
          注销申请提交后，您有7天的冷静期。在此期间，您可以通过重新登录来撤销注销申请。
        </text>
      </view>
    </view>

    <!-- 确认对话框 -->
    <u-modal 
      v-model="showConfirmModal"
      title="确认注销账号"
      :content="confirmContent"
      confirm-text="确认注销"
      cancel-text="取消"
      @confirm="confirmDeletion"
      @cancel="showConfirmModal = false"
    ></u-modal>
  </view>
</template>

<script>
import { callFunction } from '@/utils/unicloud-handler.js';
import { clearLoginData } from '@/utils/auth.js';

export default {
  data() {
    return {
      isLoading: false,
      isDeleting: false,
      
      // 注销原因
      selectedReason: '',
      customReason: '',
      reasonOptions: [
        { value: 'privacy', label: '隐私考虑' },
        { value: 'no_use', label: '不再使用' },
        { value: 'found_alternative', label: '找到替代产品' },
        { value: 'other', label: '其他原因' }
      ],
      
      // 确认状态
      confirmDelete: false,
      showConfirmModal: false,
      confirmContent: '账号注销后所有数据将被永久删除，此操作不可恢复。确定要继续吗？'
    };
  },
  
  computed: {
    // 是否可以删除
    canDelete() {
      return this.confirmDelete && !this.isDeleting;
    }
  },
  
  methods: {
    // 返回上一页
    goBack() {
      uni.navigateBack();
    },
    
    // 处理注销
    handleDelete() {
      if (!this.canDelete) return;
      
      this.showConfirmModal = true;
    },
    
    // 确认注销
    async confirmDeletion() {
      this.showConfirmModal = false;
      this.isDeleting = true;
      
      uni.showLoading({ title: '处理中...' });
      
      try {
        const token = uni.getStorageSync('token');
        if (!token) {
          throw new Error('请先登录');
        }
        
        // 任务1: 调用云函数执行注销
        const res = await callFunction('consent-revoke', {
          action: 'delete_account',
          token,
          reason: this.selectedReason,
          customReason: this.customReason,
          confirmDelete: true,
          timestamp: Date.now(),
          deviceInfo: {
            platform: uni.getSystemInfoSync().platform,
            model: uni.getSystemInfoSync().model
          }
        });
        
        if (res.code === 200) {
          uni.hideLoading();
          
          // 任务1: 备份用户数据（可选，在云函数中已处理）
          await this.backupUserData();
          
          // 显示成功提示
          uni.showModal({
            title: '注销申请已提交',
            content: '您的账号将在7天后正式注销。在此期间，您可以通过重新登录来撤销注销申请。',
            showCancel: false,
            success: () => {
              // 任务1: 清除本地数据和token
              this.clearLocalData();
              
              // 跳转到登录页
              uni.reLaunch({
                url: '/pages/login/login'
              });
            }
          });
        } else {
          throw new Error(res.message || '注销失败');
        }
      } catch (error) {
        uni.hideLoading();
        console.error('[ACCOUNT-DELETION] 注销失败:', error);
        
        uni.showToast({
          title: error.message || '注销失败，请重试',
          icon: 'none'
        });
      } finally {
        this.isDeleting = false;
      }
    },
    
    // 任务1: 备份用户数据
    async backupUserData() {
      try {
        // 获取本地存储的用户数据
        const userData = {
          userInfo: uni.getStorageSync('userInfo'),
          assessmentRecords: uni.getStorageSync('assessmentRecords'),
          chatHistory: uni.getStorageSync('chatHistory'),
          timestamp: Date.now()
        };
        
        // 可选：上传到云存储或发送到服务器
        console.log('[ACCOUNT-DELETION] 用户数据已备份:', userData);
        
        // 记录备份事件
        uni.$emit('trackEvent', 'account_deletion_backup', {
          timestamp: userData.timestamp
        });
      } catch (error) {
        console.error('[ACCOUNT-DELETION] 备份失败:', error);
      }
    },
    
    // 任务1: 清除本地数据和token
    clearLocalData() {
      try {
        // 清除登录数据
        clearLoginData();
        
        // 清除其他本地数据
        const keysToRemove = [
          'token',
          'userInfo',
          'assessmentRecords',
          'chatHistory',
          'preferences',
          'subscriptionSettings'
        ];
        
        keysToRemove.forEach(key => {
          uni.removeStorageSync(key);
        });
        
        console.log('[ACCOUNT-DELETION] 本地数据已清除');
      } catch (error) {
        console.error('[ACCOUNT-DELETION] 清除本地数据失败:', error);
      }
    }
  },
  
  onLoad() {
    console.log('[ACCOUNT-DELETION] 页面加载');
  }
};
</script>

<style scoped lang="scss">
.page {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  background-color: #f5f5f5;
}

.page-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 16px;
  background-color: #fff;
  border-bottom: 1px solid #eee;
  padding-top: max(16px, env(safe-area-inset-top));
}

.header-back {
  font-size: 28px;
  color: #333;
}

.header-title {
  font-size: 18px;
  font-weight: 600;
  color: #333;
}

.header-placeholder {
  width: 28px;
}

.loading-container {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
}

.content {
  flex: 1;
  padding: 16px;
  overflow-y: auto;
}

.warning-section {
  background-color: #fff3cd;
  border-radius: 12px;
  padding: 16px;
  margin-bottom: 20px;
  border-left: 4px solid #ff9800;
}

.warning-icon {
  font-size: 24px;
  display: block;
  margin-bottom: 8px;
}

.warning-title {
  font-size: 16px;
  font-weight: 600;
  color: #333;
  display: block;
  margin-bottom: 8px;
}

.warning-desc {
  font-size: 14px;
  color: #666;
  display: block;
  margin-bottom: 12px;
}

.data-list {
  margin-top: 12px;
}

.data-item {
  display: flex;
  align-items: flex-start;
  margin-bottom: 8px;
  font-size: 14px;
  color: #666;
}

.item-icon {
  margin-right: 8px;
  color: #ff9800;
}

.reason-section {
  background-color: #fff;
  border-radius: 12px;
  padding: 16px;
  margin-bottom: 20px;
}

.section-title {
  font-size: 14px;
  font-weight: 600;
  color: #333;
  display: block;
  margin-bottom: 12px;
}

.reason-options {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.reason-item {
  padding: 12px;
  border: 1px solid #ddd;
  border-radius: 8px;
  background-color: #f9f9f9;
  transition: all 0.3s;
}

.reason-item.active {
  background-color: #e3f2fd;
  border-color: #2196f3;
}

.reason-text {
  font-size: 14px;
  color: #333;
}

.custom-reason {
  margin-top: 12px;
}

.reason-input {
  width: 100%;
  min-height: 80px;
  padding: 12px;
  border: 1px solid #ddd;
  border-radius: 8px;
  font-size: 14px;
  color: #333;
  background-color: #f9f9f9;
}

.char-count {
  font-size: 12px;
  color: #999;
  display: block;
  margin-top: 4px;
  text-align: right;
}

.confirm-section {
  background-color: #fff;
  border-radius: 12px;
  padding: 16px;
  margin-bottom: 20px;
}

.confirm-item {
  display: flex;
  align-items: flex-start;
  gap: 12px;
}

.confirm-text {
  font-size: 14px;
  color: #333;
  flex: 1;
}

.action-section {
  display: flex;
  gap: 12px;
  margin-bottom: 20px;
}

.btn {
  flex: 1;
  padding: 14px;
  border-radius: 8px;
  font-size: 16px;
  font-weight: 600;
  border: none;
  cursor: pointer;
  transition: all 0.3s;
}

.btn-cancel {
  background-color: #f0f0f0;
  color: #333;
}

.btn-delete {
  background-color: #ff3b30;
  color: #fff;
}

.btn-delete.disabled {
  background-color: #ccc;
  color: #999;
  cursor: not-allowed;
}

.cooldown-tip {
  display: flex;
  align-items: flex-start;
  gap: 8px;
  background-color: #e8f5e9;
  border-radius: 8px;
  padding: 12px;
  margin-bottom: 20px;
}

.tip-icon {
  font-size: 16px;
  flex-shrink: 0;
}

.tip-text {
  font-size: 13px;
  color: #2e7d32;
  line-height: 1.5;
}
</style>

