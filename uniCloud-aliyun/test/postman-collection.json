{
  "info": {
    "name": "翎心认证API测试集合",
    "description": "用于测试翎心应用认证后端API的Postman集合",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://your-cloud-function-url.com",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "认证接口",
      "item": [
        {
          "name": "注册成功",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"account\": \"testuser123\",\n  \"password\": \"test1234\",\n  \"role\": \"teen\",\n  \"nickname\": \"测试用户\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('注册成功', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('token');",
                  "    pm.expect(jsonData).to.have.property('user');",
                  "    pm.expect(jsonData.user).to.have.property('id');",
                  "    pm.expect(jsonData.user).to.have.property('nickname');",
                  "    pm.expect(jsonData.user).to.have.property('role');",
                  "    pm.collectionVariables.set('token', jsonData.token);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "重复账号注册",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"account\": \"testuser123\",\n  \"password\": \"test1234\",\n  \"role\": \"teen\",\n  \"nickname\": \"测试用户2\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('重复账号注册失败', function () {",
                  "    pm.response.to.have.status(409);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('code', 409);",
                  "    pm.expect(jsonData).to.have.property('message', '账号已存在');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "参数验证失败",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"account\": \"test\",\n  \"password\": \"123\",\n  \"role\": \"invalid\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('参数验证失败', function () {",
                  "    pm.response.to.have.status(400);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('code', 400);",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "登录成功",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"account\": \"testuser123\",\n  \"password\": \"test1234\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('登录成功', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('token');",
                  "    pm.expect(jsonData).to.have.property('user');",
                  "    pm.collectionVariables.set('token', jsonData.token);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "密码错误登录",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"account\": \"testuser123\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('密码错误登录失败', function () {",
                  "    pm.response.to.have.status(401);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('code', 401);",
                  "    pm.expect(jsonData).to.have.property('message', '密码错误');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "用户不存在登录",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"account\": \"nonexistentuser\",\n  \"password\": \"test1234\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('用户不存在登录失败', function () {",
                  "    pm.response.to.have.status(404);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('code', 404);",
                  "    pm.expect(jsonData).to.have.property('message', '用户不存在');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "获取用户信息成功",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "me"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('获取用户信息成功', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('user');",
                  "    pm.expect(jsonData.user).to.have.property('id');",
                  "    pm.expect(jsonData.user).to.have.property('nickname');",
                  "    pm.expect(jsonData.user).to.have.property('role');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "未授权访问用户信息",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "me"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('未授权访问失败', function () {",
                  "    pm.response.to.have.status(401);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('code', 401);",
                  "    pm.expect(jsonData).to.have.property('message', '未提供认证信息');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "无效Token访问",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid-token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "me"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('无效Token访问失败', function () {",
                  "    pm.response.to.have.status(401);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('code', 401);",
                  "    pm.expect(jsonData.message).to.include('Token');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "刷新Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "refresh"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('刷新Token成功', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('token');",
                  "    pm.collectionVariables.set('token', jsonData.token);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "速率限制测试",
      "item": [
        {
          "name": "快速连续请求",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"account\": \"ratelimituser\",\n  \"password\": \"test1234\",\n  \"role\": \"teen\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('速率限制检查', function () {",
                  "    // 第一次请求应该成功或返回409（如果用户已存在）",
                  "    // 连续多次请求后应该返回429",
                  "    const status = pm.response.code;",
                  "    pm.expect([200, 409, 429]).to.include(status);",
                  "    ",
                  "    if (status === 429) {",
                  "        const jsonData = pm.response.json();",
                  "        pm.expect(jsonData).to.have.property('code', 429);",
                  "        pm.expect(jsonData.message).to.include('频繁');",
                  "    }",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}